addEventListener("DOMContentLoaded", () => {
  const square1 = document.querySelector(".square.square-1")

  const start = function start() {
    square1.addEventListener("click", (e) => {
      console.log(1)
      foo1()
      foo4()
      foo2()
      foo3()
      setTimeout(() => {
        console.log("FINISH?")
      }, 1000)
    })
  }
  start()
  function foo1() {
    const promise1 = Promise.resolve().then(() => {
      console.log(2)
      return 3
    })
    const promise2 = Promise.resolve().then(() => {
      setTimeout(() => {
        for (let i = 5; i <= 7; i++) {
          console.log(i)
        }
      }, 2000)
      return 4
    })
    setTimeout(() => {
      promise1.then((d) => console.log(d))
      promise2.then((d) => console.log(d))

      for (let i = 7; i <= 8; i++) {
        console.log(i)
      }
    }, 1000)
  }
  const foo2 = function () {
    console.log(0)
  }
  const foo3 = function () {
    for (let i = 97; i <= 100; i++) {
      console.log(i)
    }
  }
  function foo4() {
    setTimeout(() => {
      for (let i = 68; i < 71; i++) {
        console.log(i)
      }
    }, 0)
  }
})

// 1. Код начинается с добавления обработчика события "DOMContentLoaded",
// который будет выполнен, когда вся страница загрузится.
//
// 2. Когда событие происходит, создается переменная "square1",
// которая ссылается на элемент на странице с классом "square-1".
//
// 3. Функция "start" создается, она добавляет обработчик событий "click" на элемент "square1".
// Это означает, что когда пользователь кликает на элемент "square1",
// будет выполнена последовательность других функций.
//
// 4. Функция "foo1" создает два промиса: "promise1" и "promise2".
// "promise1" просто возвращает значение 3, а "promise2" выводит числа 5-7 через 2 секунды,
// используя функцию "setTimeout", а затем возвращает значение 4.
//
// 5. После этого функция "foo1" также выводит числа 2 и 5-8 в консоль через
// определенное время с помощью функции "setTimeout".
//
// 6. Функция "foo2" выводит число 0 в консоль.
//
// 7. Функция "foo3" выводит числа 97-100 в консоль.
//
// 8. Функция "foo4" выводит числа 68-70 в консоль через 0 секунд
// с помощью функции "setTimeout".
//
// 9. После определения всех функций, функция "start" вызывается,
// что добавляет обработчик событий "click" на элемент "square1".
//
// 10. Когда пользователь кликает на элемент "square1",
// выполнение начинается с функции "foo1", которая создает промисы "promise1" и "promise2",
// выводит числа 2 и 5-8 в консоль, а затем выводит значения 3 и 4 в консоль через
// секунду с помощью функции "setTimeout".
//
// 11. После этого функция "foo4" выполняется,
// выводя числа 68-70 в консоль через 0 секунд с помощью функции "setTimeout".
//
// 12. Функция "foo2" выполняется, выводя число 0 в консоль.
//
// 13. Функция "foo3" выполняется, выводя числа 97-100 в консоль.
//
// 14. Наконец, через еще одну секунду в консоль выводятся числа 7-8 и "FINISH?" с помощью функции "setTimeout".
//
// При клике на элемент "square1" в консоль будут выведены следующие значения:
//
// 2
// 5
// 6
// 7
// 8
// 3
// 4
// 7
// 8
// "FINISH?"
